name: deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build :
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ktLint
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Register test results as comments in PR
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ always() }}
        with:
          files: |
            build/test-results/**/*.xml

      - name: If test fails, register a Check comment on the failed code line
        uses: mikepenz/action-junit-report@v3
        if: ${{ always() }}
        with:
          report_paths: build/test-results/**/*.xml
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Register test coverage as a comment in PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          title: 📝 테스트 커버리지 리포트입니다
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 50
          min-coverage-changed-files: 50
          pass-emoji: ':green_circle:'
          fail-emoji: ':red_circle:'

      - name: If build fails, notify as Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Build Failure Notification
          fields: repo, message, commit, author, action, eventName, ref, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push docker image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REGISTRY }}:$IMAGE_TAG
          echo "image=${{ secrets.ECR_REGISTRY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT